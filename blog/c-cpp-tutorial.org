#+TITLE:       C/C++简明教程
#+AUTHOR:      lampze
#+EMAIL:       1229408499@qq.com
#+DATE:        2020-11-17 二
#+URI:         /blog/%y/%m/%d/c-cpp-tutorial
#+KEYWORDS:    tutorial, C/C++
#+TAGS:        tutorial, C/C++
#+LANGUAGE:    zh
#+OPTIONS:     H:3 num:nil toc:t \n:t ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: C/C++的简单教程

* 前言
编程语言是让我们使用一个大部分人能理解的方式控制计算机，所以写代码时最重要的是可读性，对自己要求高的同学可以思考怎么保持代码的整洁与优雅。

本文不会把每种表都列出来（如优先级、关键字等），这些网上或课本上都有，请自行翻阅，本书仅仅是讲清原理与我自己理解的逻辑。

本文只把基础的逻辑与用法讲清楚，最后可能会附带几个例题，想要真正的学会编程还是要多写代码。

最后请看看这篇文章《[[https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/README-zh_CN.md][提问的智慧]]》，如果有人问我比较蠢问题的问题那就原谅我也敷衍一下。

* C语言
** 编程与运行流程
*** 写代码
对于 =windows= 来说，我推荐新手使用 =Dev-C++= 这个 =IDE= 来编写代码，这个软件虽然有些年头了，也很长时间没有更新了，但作为一个编程集成环境还是及格的，具体的操作还是比较简单，很多事情都能一键完成。
对于参加蓝桥杯的同学， =Dev-C++= 也是官方指定的编程环境。
请不要使用 =vc++= ！！！

对于 =Linux= 来说，新手可以使用 =nano= 来编写代码，有基础的同学可以学下 =vim= ，进阶的话可以玩玩 =Emacs= 。
*** 编译
对于 =IDE= 来说只需要按下按钮就能自动的编译了，没有什么需要动脑的地方。

当然我们不能这样就行了，下面简单介绍下编译是什么。我们写的代码其实都是文本文件，计算机并不认识，计算机只能处理2进制的指令，也就是机器语言，每种 =CPU= 的机器语言都是不一样的，所以我们需要把我们认识的代码转换成计算机认识机器代码，这个过程叫做编译。

目前使用最广的编译器是 =gcc= ， =Dev-C++= 也是使用的这个编译器，安装 =gcc= 后可以在命令行使用 =gcc= 命令，这个命令给定一个源代码文件，然后输出一个二进制文件，然后计算机就能执行这个二进制文件了。
*** 运行过程
#+begin_src c
#include <stdio.h>

int main() {
  printf("Hello, World\n");
  return 0;
}
#+end_src

对于 =C= 来说，它运行时总会从 =main= 函数开始，只要 =main= 函数结束整个程序就结束了。对于上面这个代码来说，它输出了一行 =Hello，World= 文本，并返回了0。需要注意这个0是返回给了操作系统，作用只有一个，就是告诉操作系统这个程序运行过程是否有错误，0表示没有错误。

注意 =main= 只是第一个执行的函数，定义语句、引入库函数语句、宏语句等肯定是要优先执行的。
** 语法简介
我们从简单的语句开始，语句由表达式组成，一条语句必须有一个分号当作结尾，比如 =1+1;= 就是一条语句。这条语句中的 =+= 是 =C= 自带的一些操作符，数学上常用的运算符都有。这里需要强调一下 === 是赋值运算符，比如 =a=b;= 的意思就是把a的值设置成b的值，也即对等号右边的表达式进行求值，然后把返回值赋值给左边。变量可以简单理解为一个箱子，箱子可以放置或取出数据。

下面讲解表达式，每个表达式都有返回值，同一时刻只能运算一个操作。对于 =1+1+1= 这个表达式，它的求值过程是这样的：
1. 先运算第一个 =1+1= ，它的返回值是 =2=
2. 表达式变成 =2+1=
3. 得出返回值 =3=

记住分辩操作是跟根据操作符来的，有些操作符是需要两边都有数据，有些只需要一个，并且每个操作符都有优先级的，计算机会优先执行优先级高的操作，优先级一般来说符合直觉
如果是同级的操作，根据操作符的类型来判定是从左到右还是从右到左。
如果记不住执行的顺序，可以简单的使用括号把你想要独立执行的操作括起来，括号内的会优先执行。
比如 =(1 + 2) * 3= -> =(3) * 3= -> =3 * 3= -> =9=

这样就是最基本的 =C= 语法，更加复杂的语法在后面讲解。
** 变量
*** 简介
变量可以理解成一个箱子，我们可以把一些东西放到箱子，也可以从箱子内把东西取出来。
类型的作用只是为每个箱子打上了标签，规定了箱子内不能随便放东西，比如一个放水果的箱子就不能把水倒进去。
*** 类型
=C= 是一个强类型的语言，它的意思就是每个数据都有类型，不同类型的数据不能随便使用，比如一个整数类型的变量就不能放入一个小数数据。

=C= 里有三种简单常用的类型：整数、小数、字符；

我们需要记下这些类型的名称
整数有： =short= 、 =int= 、 =long= 、 =long long=
小数有： =float= 、 =doubel=
字符有： =char=

这些不同的类型之间的区别只是它们用来存储数据的空间大小，比如 =short= 只用2个字节存储整数。
对于初学者只需要记下 =int= 、 =float=  、 =char= 就行了。

*** 创建
创建一个变量需要使用变量声明语句，大概是这种形式 =<变量类型> <变量名>;= ，举个例子 =int a;= 这样就创建了一个 =int= 类型的变量 =a= 。

如果使用这种形式 =<变量类型> <变量名> = <表达式>;= 的语句声明变量的话，就会给这个变量一个初始值，比如 =float pi = 3.1415926;= 就定义了一个 =float= 类型的变量 =pi= ，它的初始值为 =3.1415926= 。

注意一点，变量名不能与 =C= 的关键字重名，已经使用过的名字不能重复定义。
*** 使用
在表达式内，我们可以把变量当作一个求值操作，这个操作的返回值为变量内的值，比如 =int a = 1;= 后 =a= 这个表示式的值就为 =1= ， =(a + 1) * a= -> =(1 + 1) * a= -> =2 * a= -> =2 * 1= -> =2= 。

对于变量我们还可以对它使用赋值运算符，比如 === 、 =++= 、 =--= 
=== 就是简单的把等号右边的表示式求值，放到等号左边的变量内
=++= 是把变量内的值加上1，然后放到变量内
=--= 是把变量内的值减去1，然后放入变量内

赋值运算也是一个表示式，这意味着它也会返回一个值
比如 =1 + (a = 3)= -> =1 + 3= -> =4=
需要注意这个表示式会有一个副作用，它把 =a= 的值改变成 =3= 了

后面两个运算符有些许的复杂
=a++= 的返回值是 =a=
=++a= 的返回值是 =a+1=
=a--= 的返回值是 =a--=
=--a= 的返回值是 =a-1=
注意，虽然返回值不一样，但这个变量的值都改变了，也即是一个副作用

下面举些例子 =int a = 1;=
=1 + a++= -> =1 + 1= -> =2=
=a= -> =2=
=1 + (++a)= -> =1 + 3= -> =4=
=a= -> =3=
=1 + a--= -> =1 + 3= -> =4=
=a= -> =2=
=1 + (--a)= -> =1 + 1= -> =2=
=a= -> =1=
** 输入输出
** 选择
** 循环
** 数组
** 指针
** 结构体
** 函数
** 递归
** 其它
* C++

