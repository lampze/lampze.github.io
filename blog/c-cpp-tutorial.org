#+TITLE:       C/C++简明教程
#+AUTHOR:      lampze
#+EMAIL:       1229408499@qq.com
#+DATE:        2020-11-17 二
#+URI:         /blog/%y/%m/%d/c-cpp-tutorial
#+KEYWORDS:    tutorial, C/C++
#+TAGS:        tutorial, C/C++
#+LANGUAGE:    zh
#+OPTIONS:     H:3 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: C/C++的简单教程

* 前言
编程语言是让我们使用一个大部分人能理解的方式控制计算机，所以写代码时最重要的是可读性，对自己要求高的同学可以思考怎么保持代码的整洁与优雅。

本文只把基础的逻辑与用法讲清楚，最后可能会附带几个例题，想要真正的学会编程还是要多写代码。

最后请看看这篇文章《[[https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/README-zh_CN.md][提问的智慧]]》，如果有人问我比较蠢问题的问题那就原谅我也敷衍一下。

* C语言
** 编程与运行流程
*** 写代码
对于 =windows= 来说，我推荐新手使用 =Dev-C++= 这个 =IDE= 来编写代码，这个软件虽然有些年头了，也很长时间没有更新了，但作为一个编程集成环境还是及格的，具体的操作还是比较简单，很多事情都能一键完成。\
对于参加蓝桥杯的同学， =Dev-C++= 也是官方指定的编程环境。\
请不要使用 =vc++= ！！！

对于 =Linux= 来说，新手可以使用 =nano= 来编写代码，有基础的同学可以学下 =vim= ，进阶的话可以玩玩 =Emacs= 。
*** 编译
对于 =IDE= 来说只需要按下按钮就能自动的编译了，没有什么需要动脑的地方。

当然我们不能这样就行了，下面简单介绍下编译是什么。我们写的代码其实都是文本文件，计算机并不认识，计算机只能处理2进制的指令，也就是机器语言，每种 =CPU= 的机器语言都是不一样的，所以我们需要把我们认识的代码转换成计算机认识机器代码，这个过程叫做编译。

目前使用最广的编译器是 =gcc= ， =Dev-C++= 也是使用的这个编译器，安装 =gcc= 后可以在命令行使用 =gcc= 命令，这个命令给定一个源代码文件，然后输出一个二进制文件，然后计算机就能执行这个二进制文件了。
*** 运行过程
#+begin_src c
#include <stdio.h>

int main() {
  printf("Hello, World\n");
  return 0;
}
#+end_src

对于 =C= 来说，它运行时总会从 =main= 函数开始，只要 =main= 函数结束整个程序就结束了。对于上面这个代码来说，它输出了一行 =Hello，World= 文本，并返回了0。需要注意这个0是返回给了操作系统，作用只有一个，就是告诉操作系统这个程序运行过程是否有错误，0表示没有错误。

注意 =main= 只是第一个执行的函数，定义语句、引入库函数语句、宏语句等肯定是要优先执行的。

** 简单输入输出
** 变量
** 输入输出
** 选择
** 循环
** 数组
** 指针
** 结构体
** 函数
** 递归
** 其它
* C++

